.theme-redesign {
    // Ensure Bootstrap does not create any variants, we will use our own theme-colors
    $theme-colors: map-remove($theme-colors, 'primary', 'secondary', 'success', 'info', 'danger', 'warning', 'merged');
    @import 'bootstrap/scss/buttons';
    @import 'bootstrap/scss/button-group';

    /*
    * Generate
    */
    @each $color, $variants in $theme-colors-redesign-variants {
        .btn-#{$color} {
            color: var(--light-text);
            border-color: transparent;
            background-color: map-get($variants, 1);

            &:hover {
                color: var(--light-text);
                background-color: map-get($variants, 3);
            }

            &:focus,
            &.focus,
            &:active,
            &.active {
                background-color: map-get($variants, 1);
                border-color: var(--body-bg);

                @at-root #{selector-append('.theme-light', &)} {
                    box-shadow: 0 0 0 2px map-get($variants, 2);
                }
                @at-root #{selector-append('.theme-dark', &)} {
                    box-shadow: 0 0 0 2px map-get($variants, 3);
                }
            }

            &.disabled,
            &:disabled {
                opacity: 1;
                background-color: map-get($variants, 2);
                border-color: map-get($variants, 2);
            }
        }

        .btn-outline-#{$color} {
            color: var(--body-color);
            border-color: map-get($variants, 1);
            background-color: transparent;

            &:hover {
                background-color: var(--body-bg);
                @at-root #{selector-append('.theme-light', &)} {
                    color: map-get($variants, 3);
                    border-color: map-get($variants, 3);
                }
                @at-root #{selector-append('.theme-dark', &)} {
                    color: map-get($variants, 1);
                    border-color: map-get($variants, 1);
                }
            }

            &.disabled,
            &:disabled {
                color: var(--text-muted);
                background-color: var(--color-bg-1);
            }

            &:focus,
            &.focus,
            &:active,
            &.active {
                @at-root #{selector-append('.theme-light', &)} {
                    box-shadow: 0 0 0 2px map-get($variants, 2);
                }
                @at-root #{selector-append('.theme-dark', &)} {
                    box-shadow: 0 0 0 2px map-get($variants, 3);
                }
            }
        }
    }
}

// Overides
.theme-light.theme-redesign,
.theme-dark.theme-redesign {
    // Update text colors to improve contrast
    .btn-secondary,
    .btn-outline-secondary {
        color: var(--body-color);

        &:focus,
        &.focus,
        &:active,
        &.active {
            color: var(--body-color);
            // Use blue focus outline to improve contrast
            box-shadow: 0 0 0 2px var(--primary-2);
        }

        &:hover {
            color: var(--body-color);
        }

        &:disabled,
        &.disabled {
            color: var(--text-muted);
        }
    }
    .btn-warning,
    .btn-info {
        color: var(--dark-text);

        &:hover,
        &:focus,
        &.focus,
        &:active,
        &.active {
            color: var(--dark-text);
        }

        &:disabled,
        &.disabled {
            color: var(--text-muted);
        }
    }
}
